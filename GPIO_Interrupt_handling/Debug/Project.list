
Project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000628  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007bc  080007c4  000017c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007bc  080007bc  000017c4  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080007bc  080007bc  000017c4  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080007bc  080007c4  000017c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007bc  080007bc  000017bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080007c0  080007c0  000017c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000017c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080007c4  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080007c4  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000017c4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b5b  00000000  00000000  000017f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002a2  00000000  00000000  0000234f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  000025f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000083  00000000  00000000  000026b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001d87  00000000  00000000  0000273b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000ead  00000000  00000000  000044c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008349  00000000  00000000  0000536f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000d6b8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000260  00000000  00000000  0000d6fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000043  00000000  00000000  0000d95c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080007a4 	.word	0x080007a4

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080007a4 	.word	0x080007a4

080001d4 <main>:
#include <stm32f40xx.h>
#include <string.h>

int main()
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b086      	sub	sp, #24
 80001d8:	af00      	add	r7, sp, #0
	/**
	 * GPIO clock peripheral enable
	 * */
	// GPIO_PeriClockControl(GPIO_A, ENABLE);
	GPIO_PeriClockControl(GPIO_B, ENABLE);
 80001da:	2101      	movs	r1, #1
 80001dc:	2001      	movs	r0, #1
 80001de:	f000 f845 	bl	800026c <GPIO_PeriClockControl>

	/**
	 * GPIOA configuration as Push pull 
	 */
	GPIO_Handle GpioLed;
	memset(&GpioLed, 0, sizeof(GpioLed));
 80001e2:	f107 030c 	add.w	r3, r7, #12
 80001e6:	220c      	movs	r2, #12
 80001e8:	2100      	movs	r1, #0
 80001ea:	4618      	mov	r0, r3
 80001ec:	f000 faad 	bl	800074a <memset>

	GpioLed.pGPIOx = GPIOB;
 80001f0:	4b16      	ldr	r3, [pc, #88]	@ (800024c <main+0x78>)
 80001f2:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PmapConfig.GPIO_PinNumber = GPIO_PIN12;
 80001f4:	230c      	movs	r3, #12
 80001f6:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PmapConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 80001f8:	2301      	movs	r3, #1
 80001fa:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PmapConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80001fc:	2300      	movs	r3, #0
 80001fe:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PmapConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000200:	2301      	movs	r3, #1
 8000202:	74fb      	strb	r3, [r7, #19]

	GPIO_init(GPIO_A, &GpioLed);
 8000204:	f107 030c 	add.w	r3, r7, #12
 8000208:	4619      	mov	r1, r3
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f84a 	bl	80002a4 <GPIO_init>

	/**
	 * Button configuration
	 */
	GPIO_Handle GpioBtn;
	memset(&GpioBtn, 0, sizeof(GpioBtn));
 8000210:	463b      	mov	r3, r7
 8000212:	220c      	movs	r2, #12
 8000214:	2100      	movs	r1, #0
 8000216:	4618      	mov	r0, r3
 8000218:	f000 fa97 	bl	800074a <memset>

	GpioBtn.pGPIOx = GPIOB;
 800021c:	4b0b      	ldr	r3, [pc, #44]	@ (800024c <main+0x78>)
 800021e:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PmapConfig.GPIO_PinNumber = GPIO_PIN5;
 8000220:	2305      	movs	r3, #5
 8000222:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PmapConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000224:	2304      	movs	r3, #4
 8000226:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PmapConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000228:	2301      	movs	r3, #1
 800022a:	71fb      	strb	r3, [r7, #7]

	GPIO_init(GPIO_B, &GpioBtn);
 800022c:	463b      	mov	r3, r7
 800022e:	4619      	mov	r1, r3
 8000230:	2001      	movs	r0, #1
 8000232:	f000 f837 	bl	80002a4 <GPIO_init>

	/**
	 * IRQ configuration
	 */
	GPIO_IRQIRConfig(IRQ_NO_EXTI9_5, ENABLE);
 8000236:	2101      	movs	r1, #1
 8000238:	2017      	movs	r0, #23
 800023a:	f000 f98f 	bl	800055c <GPIO_IRQIRConfig>
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5, 15);
 800023e:	210f      	movs	r1, #15
 8000240:	2017      	movs	r0, #23
 8000242:	f000 fa0b 	bl	800065c <GPIO_IRQPriorityConfig>
	while(1);
 8000246:	bf00      	nop
 8000248:	e7fd      	b.n	8000246 <main+0x72>
 800024a:	bf00      	nop
 800024c:	40020400 	.word	0x40020400

08000250 <EXTI9_5_IRQHandler>:

}

void EXTI9_5_IRQHandler(void)
{
 8000250:	b580      	push	{r7, lr}
 8000252:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN5);
 8000254:	2005      	movs	r0, #5
 8000256:	f000 fa2f 	bl	80006b8 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOB, GPIO_PIN12);
 800025a:	210c      	movs	r1, #12
 800025c:	4802      	ldr	r0, [pc, #8]	@ (8000268 <EXTI9_5_IRQHandler+0x18>)
 800025e:	f000 f967 	bl	8000530 <GPIO_ToggleOutputPin>
}
 8000262:	bf00      	nop
 8000264:	bd80      	pop	{r7, pc}
 8000266:	bf00      	nop
 8000268:	40020400 	.word	0x40020400

0800026c <GPIO_PeriClockControl>:

 /**
  * Perpheral clock setup
  */
 void GPIO_PeriClockControl(U08 pGPIOx, U08 EnorDis)
 {
 800026c:	b480      	push	{r7}
 800026e:	b083      	sub	sp, #12
 8000270:	af00      	add	r7, sp, #0
 8000272:	4603      	mov	r3, r0
 8000274:	460a      	mov	r2, r1
 8000276:	71fb      	strb	r3, [r7, #7]
 8000278:	4613      	mov	r3, r2
 800027a:	71bb      	strb	r3, [r7, #6]
    if(EnorDis == ENABLE)
 800027c:	79bb      	ldrb	r3, [r7, #6]
 800027e:	2b01      	cmp	r3, #1
 8000280:	d108      	bne.n	8000294 <GPIO_PeriClockControl+0x28>
    {
        GPIOx_PCLOCK_EN(pGPIOx);
 8000282:	4b07      	ldr	r3, [pc, #28]	@ (80002a0 <GPIO_PeriClockControl+0x34>)
 8000284:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000286:	79fb      	ldrb	r3, [r7, #7]
 8000288:	2101      	movs	r1, #1
 800028a:	fa01 f303 	lsl.w	r3, r1, r3
 800028e:	4904      	ldr	r1, [pc, #16]	@ (80002a0 <GPIO_PeriClockControl+0x34>)
 8000290:	4313      	orrs	r3, r2
 8000292:	630b      	str	r3, [r1, #48]	@ 0x30
    }
    else
    {
    	//do nothing
    }
 }
 8000294:	bf00      	nop
 8000296:	370c      	adds	r7, #12
 8000298:	46bd      	mov	sp, r7
 800029a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800029e:	4770      	bx	lr
 80002a0:	40023800 	.word	0x40023800

080002a4 <GPIO_init>:

/**
 * Init and De-init
 */
void GPIO_init(U08 pGPIOx, GPIO_Handle* pGPIOHandle)
{
 80002a4:	b480      	push	{r7}
 80002a6:	b085      	sub	sp, #20
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	4603      	mov	r3, r0
 80002ac:	6039      	str	r1, [r7, #0]
 80002ae:	71fb      	strb	r3, [r7, #7]
    U32 tdata = 0;
 80002b0:	2300      	movs	r3, #0
 80002b2:	60fb      	str	r3, [r7, #12]
    U08 temp_val[2] = {0, };
 80002b4:	2300      	movs	r3, #0
 80002b6:	813b      	strh	r3, [r7, #8]
    /*1. Configure the mode of gpio pin*/
    if(pGPIOHandle->GPIO_PmapConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80002b8:	683b      	ldr	r3, [r7, #0]
 80002ba:	795b      	ldrb	r3, [r3, #5]
 80002bc:	2b03      	cmp	r3, #3
 80002be:	d81f      	bhi.n	8000300 <GPIO_init+0x5c>
    {
        tdata = (pGPIOHandle->GPIO_PmapConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber));
 80002c0:	683b      	ldr	r3, [r7, #0]
 80002c2:	795b      	ldrb	r3, [r3, #5]
 80002c4:	461a      	mov	r2, r3
 80002c6:	683b      	ldr	r3, [r7, #0]
 80002c8:	791b      	ldrb	r3, [r3, #4]
 80002ca:	005b      	lsls	r3, r3, #1
 80002cc:	fa02 f303 	lsl.w	r3, r2, r3
 80002d0:	60fb      	str	r3, [r7, #12]
        pGPIOHandle->pGPIOx->MODER &=~(0x3 << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 80002d2:	683b      	ldr	r3, [r7, #0]
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	681a      	ldr	r2, [r3, #0]
 80002d8:	683b      	ldr	r3, [r7, #0]
 80002da:	791b      	ldrb	r3, [r3, #4]
 80002dc:	4619      	mov	r1, r3
 80002de:	2303      	movs	r3, #3
 80002e0:	408b      	lsls	r3, r1
 80002e2:	43db      	mvns	r3, r3
 80002e4:	4619      	mov	r1, r3
 80002e6:	683b      	ldr	r3, [r7, #0]
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	400a      	ands	r2, r1
 80002ec:	601a      	str	r2, [r3, #0]
        pGPIOHandle->pGPIOx->MODER |= tdata;
 80002ee:	683b      	ldr	r3, [r7, #0]
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	6819      	ldr	r1, [r3, #0]
 80002f4:	683b      	ldr	r3, [r7, #0]
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	68fa      	ldr	r2, [r7, #12]
 80002fa:	430a      	orrs	r2, r1
 80002fc:	601a      	str	r2, [r3, #0]
 80002fe:	e070      	b.n	80003e2 <GPIO_init+0x13e>
    }
    else
    {
        /* GPIO Interrupt handler*/
        if(pGPIOHandle->GPIO_PmapConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000300:	683b      	ldr	r3, [r7, #0]
 8000302:	795b      	ldrb	r3, [r3, #5]
 8000304:	2b04      	cmp	r3, #4
 8000306:	d115      	bne.n	8000334 <GPIO_init+0x90>
        {
            /*1. Configure the FTSR*/
            EXTI->FTSR |= (1U << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 8000308:	4b86      	ldr	r3, [pc, #536]	@ (8000524 <GPIO_init+0x280>)
 800030a:	68da      	ldr	r2, [r3, #12]
 800030c:	683b      	ldr	r3, [r7, #0]
 800030e:	791b      	ldrb	r3, [r3, #4]
 8000310:	4619      	mov	r1, r3
 8000312:	2301      	movs	r3, #1
 8000314:	408b      	lsls	r3, r1
 8000316:	4983      	ldr	r1, [pc, #524]	@ (8000524 <GPIO_init+0x280>)
 8000318:	4313      	orrs	r3, r2
 800031a:	60cb      	str	r3, [r1, #12]

            /* Clear the corresponding RTSR bit for secure*/
            EXTI->RTSR &= ~(1U << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 800031c:	4b81      	ldr	r3, [pc, #516]	@ (8000524 <GPIO_init+0x280>)
 800031e:	689a      	ldr	r2, [r3, #8]
 8000320:	683b      	ldr	r3, [r7, #0]
 8000322:	791b      	ldrb	r3, [r3, #4]
 8000324:	4619      	mov	r1, r3
 8000326:	2301      	movs	r3, #1
 8000328:	408b      	lsls	r3, r1
 800032a:	43db      	mvns	r3, r3
 800032c:	497d      	ldr	r1, [pc, #500]	@ (8000524 <GPIO_init+0x280>)
 800032e:	4013      	ands	r3, r2
 8000330:	608b      	str	r3, [r1, #8]
 8000332:	e031      	b.n	8000398 <GPIO_init+0xf4>
        }
        else if (pGPIOHandle->GPIO_PmapConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000334:	683b      	ldr	r3, [r7, #0]
 8000336:	795b      	ldrb	r3, [r3, #5]
 8000338:	2b05      	cmp	r3, #5
 800033a:	d115      	bne.n	8000368 <GPIO_init+0xc4>
        {
            /* Configure the RTST */
            EXTI->RTSR |= (1U << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 800033c:	4b79      	ldr	r3, [pc, #484]	@ (8000524 <GPIO_init+0x280>)
 800033e:	689a      	ldr	r2, [r3, #8]
 8000340:	683b      	ldr	r3, [r7, #0]
 8000342:	791b      	ldrb	r3, [r3, #4]
 8000344:	4619      	mov	r1, r3
 8000346:	2301      	movs	r3, #1
 8000348:	408b      	lsls	r3, r1
 800034a:	4976      	ldr	r1, [pc, #472]	@ (8000524 <GPIO_init+0x280>)
 800034c:	4313      	orrs	r3, r2
 800034e:	608b      	str	r3, [r1, #8]

            /* Clear the corresponding RTSR bit for secure*/
            EXTI->FTSR &= ~(1U << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 8000350:	4b74      	ldr	r3, [pc, #464]	@ (8000524 <GPIO_init+0x280>)
 8000352:	68da      	ldr	r2, [r3, #12]
 8000354:	683b      	ldr	r3, [r7, #0]
 8000356:	791b      	ldrb	r3, [r3, #4]
 8000358:	4619      	mov	r1, r3
 800035a:	2301      	movs	r3, #1
 800035c:	408b      	lsls	r3, r1
 800035e:	43db      	mvns	r3, r3
 8000360:	4970      	ldr	r1, [pc, #448]	@ (8000524 <GPIO_init+0x280>)
 8000362:	4013      	ands	r3, r2
 8000364:	60cb      	str	r3, [r1, #12]
 8000366:	e017      	b.n	8000398 <GPIO_init+0xf4>
        }
        else if (pGPIOHandle->GPIO_PmapConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000368:	683b      	ldr	r3, [r7, #0]
 800036a:	795b      	ldrb	r3, [r3, #5]
 800036c:	2b06      	cmp	r3, #6
 800036e:	d113      	bne.n	8000398 <GPIO_init+0xf4>
        {
            /*C Configure both FTSR and RTST*/
            EXTI->RTSR |= (1U << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 8000370:	4b6c      	ldr	r3, [pc, #432]	@ (8000524 <GPIO_init+0x280>)
 8000372:	689a      	ldr	r2, [r3, #8]
 8000374:	683b      	ldr	r3, [r7, #0]
 8000376:	791b      	ldrb	r3, [r3, #4]
 8000378:	4619      	mov	r1, r3
 800037a:	2301      	movs	r3, #1
 800037c:	408b      	lsls	r3, r1
 800037e:	4969      	ldr	r1, [pc, #420]	@ (8000524 <GPIO_init+0x280>)
 8000380:	4313      	orrs	r3, r2
 8000382:	608b      	str	r3, [r1, #8]

            EXTI->FTSR |= (1U << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 8000384:	4b67      	ldr	r3, [pc, #412]	@ (8000524 <GPIO_init+0x280>)
 8000386:	68da      	ldr	r2, [r3, #12]
 8000388:	683b      	ldr	r3, [r7, #0]
 800038a:	791b      	ldrb	r3, [r3, #4]
 800038c:	4619      	mov	r1, r3
 800038e:	2301      	movs	r3, #1
 8000390:	408b      	lsls	r3, r1
 8000392:	4964      	ldr	r1, [pc, #400]	@ (8000524 <GPIO_init+0x280>)
 8000394:	4313      	orrs	r3, r2
 8000396:	60cb      	str	r3, [r1, #12]

        }

        /* Configure the GPIO port selection in SYSCFG_EXTICR */
        SYSCGF_PCLK_EN();
 8000398:	4b63      	ldr	r3, [pc, #396]	@ (8000528 <GPIO_init+0x284>)
 800039a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800039c:	4a62      	ldr	r2, [pc, #392]	@ (8000528 <GPIO_init+0x284>)
 800039e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80003a2:	6453      	str	r3, [r2, #68]	@ 0x44

        temp_val[0] = pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber / 4;
 80003a4:	683b      	ldr	r3, [r7, #0]
 80003a6:	791b      	ldrb	r3, [r3, #4]
 80003a8:	089b      	lsrs	r3, r3, #2
 80003aa:	b2db      	uxtb	r3, r3
 80003ac:	723b      	strb	r3, [r7, #8]
        temp_val[1] = pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber % 4;
 80003ae:	683b      	ldr	r3, [r7, #0]
 80003b0:	791b      	ldrb	r3, [r3, #4]
 80003b2:	f003 0303 	and.w	r3, r3, #3
 80003b6:	b2db      	uxtb	r3, r3
 80003b8:	727b      	strb	r3, [r7, #9]

        SYS_CFG->EXTICR[temp_val[0]] = pGPIOx << (temp_val[1] * 4);
 80003ba:	79fa      	ldrb	r2, [r7, #7]
 80003bc:	7a7b      	ldrb	r3, [r7, #9]
 80003be:	009b      	lsls	r3, r3, #2
 80003c0:	fa02 f103 	lsl.w	r1, r2, r3
 80003c4:	4a59      	ldr	r2, [pc, #356]	@ (800052c <GPIO_init+0x288>)
 80003c6:	7a3b      	ldrb	r3, [r7, #8]
 80003c8:	3302      	adds	r3, #2
 80003ca:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

        /* Enable the exti interrupt delivery using IMR*/
        EXTI->IMR |= (1U << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 80003ce:	4b55      	ldr	r3, [pc, #340]	@ (8000524 <GPIO_init+0x280>)
 80003d0:	681a      	ldr	r2, [r3, #0]
 80003d2:	683b      	ldr	r3, [r7, #0]
 80003d4:	791b      	ldrb	r3, [r3, #4]
 80003d6:	4619      	mov	r1, r3
 80003d8:	2301      	movs	r3, #1
 80003da:	408b      	lsls	r3, r1
 80003dc:	4951      	ldr	r1, [pc, #324]	@ (8000524 <GPIO_init+0x280>)
 80003de:	4313      	orrs	r3, r2
 80003e0:	600b      	str	r3, [r1, #0]
        
    }

    /*2. COnfigure the speed*/
    tdata = ((pGPIOHandle->GPIO_PmapConfig.GPIO_PinSpeed) << (2 * pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber));
 80003e2:	683b      	ldr	r3, [r7, #0]
 80003e4:	799b      	ldrb	r3, [r3, #6]
 80003e6:	461a      	mov	r2, r3
 80003e8:	683b      	ldr	r3, [r7, #0]
 80003ea:	791b      	ldrb	r3, [r3, #4]
 80003ec:	005b      	lsls	r3, r3, #1
 80003ee:	fa02 f303 	lsl.w	r3, r2, r3
 80003f2:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->OSPEEDR &=~(0x3 << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 80003f4:	683b      	ldr	r3, [r7, #0]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	689a      	ldr	r2, [r3, #8]
 80003fa:	683b      	ldr	r3, [r7, #0]
 80003fc:	791b      	ldrb	r3, [r3, #4]
 80003fe:	4619      	mov	r1, r3
 8000400:	2303      	movs	r3, #3
 8000402:	408b      	lsls	r3, r1
 8000404:	43db      	mvns	r3, r3
 8000406:	4619      	mov	r1, r3
 8000408:	683b      	ldr	r3, [r7, #0]
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	400a      	ands	r2, r1
 800040e:	609a      	str	r2, [r3, #8]
    pGPIOHandle->pGPIOx->OSPEEDR |= tdata;
 8000410:	683b      	ldr	r3, [r7, #0]
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	6899      	ldr	r1, [r3, #8]
 8000416:	683b      	ldr	r3, [r7, #0]
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	68fa      	ldr	r2, [r7, #12]
 800041c:	430a      	orrs	r2, r1
 800041e:	609a      	str	r2, [r3, #8]

    /*3. Configure the pupd settings*/
    tdata = ((pGPIOHandle->GPIO_PmapConfig.GPIO_PinPuPdControl) << (2 * pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber));
 8000420:	683b      	ldr	r3, [r7, #0]
 8000422:	79db      	ldrb	r3, [r3, #7]
 8000424:	461a      	mov	r2, r3
 8000426:	683b      	ldr	r3, [r7, #0]
 8000428:	791b      	ldrb	r3, [r3, #4]
 800042a:	005b      	lsls	r3, r3, #1
 800042c:	fa02 f303 	lsl.w	r3, r2, r3
 8000430:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->PUPDR &=~(0x3 << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 8000432:	683b      	ldr	r3, [r7, #0]
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	68da      	ldr	r2, [r3, #12]
 8000438:	683b      	ldr	r3, [r7, #0]
 800043a:	791b      	ldrb	r3, [r3, #4]
 800043c:	4619      	mov	r1, r3
 800043e:	2303      	movs	r3, #3
 8000440:	408b      	lsls	r3, r1
 8000442:	43db      	mvns	r3, r3
 8000444:	4619      	mov	r1, r3
 8000446:	683b      	ldr	r3, [r7, #0]
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	400a      	ands	r2, r1
 800044c:	60da      	str	r2, [r3, #12]
    pGPIOHandle->pGPIOx->PUPDR |= tdata;
 800044e:	683b      	ldr	r3, [r7, #0]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	68d9      	ldr	r1, [r3, #12]
 8000454:	683b      	ldr	r3, [r7, #0]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	68fa      	ldr	r2, [r7, #12]
 800045a:	430a      	orrs	r2, r1
 800045c:	60da      	str	r2, [r3, #12]

    /*4. Configure the optype*/
    tdata = ((pGPIOHandle->GPIO_PmapConfig.GPIO_PinOPType) << (pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber));
 800045e:	683b      	ldr	r3, [r7, #0]
 8000460:	7a1b      	ldrb	r3, [r3, #8]
 8000462:	461a      	mov	r2, r3
 8000464:	683b      	ldr	r3, [r7, #0]
 8000466:	791b      	ldrb	r3, [r3, #4]
 8000468:	fa02 f303 	lsl.w	r3, r2, r3
 800046c:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->OTYPER &=~(0x1 << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 800046e:	683b      	ldr	r3, [r7, #0]
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	685a      	ldr	r2, [r3, #4]
 8000474:	683b      	ldr	r3, [r7, #0]
 8000476:	791b      	ldrb	r3, [r3, #4]
 8000478:	4619      	mov	r1, r3
 800047a:	2301      	movs	r3, #1
 800047c:	408b      	lsls	r3, r1
 800047e:	43db      	mvns	r3, r3
 8000480:	4619      	mov	r1, r3
 8000482:	683b      	ldr	r3, [r7, #0]
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	400a      	ands	r2, r1
 8000488:	605a      	str	r2, [r3, #4]
    pGPIOHandle->pGPIOx->OTYPER |= tdata;
 800048a:	683b      	ldr	r3, [r7, #0]
 800048c:	681b      	ldr	r3, [r3, #0]
 800048e:	6859      	ldr	r1, [r3, #4]
 8000490:	683b      	ldr	r3, [r7, #0]
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	68fa      	ldr	r2, [r7, #12]
 8000496:	430a      	orrs	r2, r1
 8000498:	605a      	str	r2, [r3, #4]

    /*5. configure the alternate function*/
    if(pGPIOHandle->GPIO_PmapConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800049a:	683b      	ldr	r3, [r7, #0]
 800049c:	795b      	ldrb	r3, [r3, #5]
 800049e:	2b02      	cmp	r3, #2
 80004a0:	d139      	bne.n	8000516 <GPIO_init+0x272>
    {
        tdata = ((pGPIOHandle->GPIO_PmapConfig.GPIO_PinAltFunMode) << (4 * pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber));
 80004a2:	683b      	ldr	r3, [r7, #0]
 80004a4:	7a5b      	ldrb	r3, [r3, #9]
 80004a6:	461a      	mov	r2, r3
 80004a8:	683b      	ldr	r3, [r7, #0]
 80004aa:	791b      	ldrb	r3, [r3, #4]
 80004ac:	009b      	lsls	r3, r3, #2
 80004ae:	fa02 f303 	lsl.w	r3, r2, r3
 80004b2:	60fb      	str	r3, [r7, #12]
        if(pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber <= GPIO_PIN7)
 80004b4:	683b      	ldr	r3, [r7, #0]
 80004b6:	791b      	ldrb	r3, [r3, #4]
 80004b8:	2b07      	cmp	r3, #7
 80004ba:	d816      	bhi.n	80004ea <GPIO_init+0x246>
        {
            pGPIOHandle->pGPIOx->AFRL &=~(0xF << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 80004bc:	683b      	ldr	r3, [r7, #0]
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	6a1a      	ldr	r2, [r3, #32]
 80004c2:	683b      	ldr	r3, [r7, #0]
 80004c4:	791b      	ldrb	r3, [r3, #4]
 80004c6:	4619      	mov	r1, r3
 80004c8:	230f      	movs	r3, #15
 80004ca:	408b      	lsls	r3, r1
 80004cc:	43db      	mvns	r3, r3
 80004ce:	4619      	mov	r1, r3
 80004d0:	683b      	ldr	r3, [r7, #0]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	400a      	ands	r2, r1
 80004d6:	621a      	str	r2, [r3, #32]
            pGPIOHandle->pGPIOx->AFRL |= tdata;
 80004d8:	683b      	ldr	r3, [r7, #0]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	6a19      	ldr	r1, [r3, #32]
 80004de:	683b      	ldr	r3, [r7, #0]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	68fa      	ldr	r2, [r7, #12]
 80004e4:	430a      	orrs	r2, r1
 80004e6:	621a      	str	r2, [r3, #32]
            pGPIOHandle->pGPIOx->AFRH &=~(0xF << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
            pGPIOHandle->pGPIOx->AFRH |= tdata;
        }
    }

}
 80004e8:	e015      	b.n	8000516 <GPIO_init+0x272>
            pGPIOHandle->pGPIOx->AFRH &=~(0xF << pGPIOHandle->GPIO_PmapConfig.GPIO_PinNumber);
 80004ea:	683b      	ldr	r3, [r7, #0]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80004f0:	683b      	ldr	r3, [r7, #0]
 80004f2:	791b      	ldrb	r3, [r3, #4]
 80004f4:	4619      	mov	r1, r3
 80004f6:	230f      	movs	r3, #15
 80004f8:	408b      	lsls	r3, r1
 80004fa:	43db      	mvns	r3, r3
 80004fc:	4619      	mov	r1, r3
 80004fe:	683b      	ldr	r3, [r7, #0]
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	400a      	ands	r2, r1
 8000504:	625a      	str	r2, [r3, #36]	@ 0x24
            pGPIOHandle->pGPIOx->AFRH |= tdata;
 8000506:	683b      	ldr	r3, [r7, #0]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800050c:	683b      	ldr	r3, [r7, #0]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	68fa      	ldr	r2, [r7, #12]
 8000512:	430a      	orrs	r2, r1
 8000514:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8000516:	bf00      	nop
 8000518:	3714      	adds	r7, #20
 800051a:	46bd      	mov	sp, r7
 800051c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000520:	4770      	bx	lr
 8000522:	bf00      	nop
 8000524:	40013c00 	.word	0x40013c00
 8000528:	40023800 	.word	0x40023800
 800052c:	40013800 	.word	0x40013800

08000530 <GPIO_ToggleOutputPin>:
    pGPIOx->ODR = Val;
}


void GPIO_ToggleOutputPin(GPIOx_TypeDef* pGPIOx, U08 PinNumber)
{
 8000530:	b480      	push	{r7}
 8000532:	b083      	sub	sp, #12
 8000534:	af00      	add	r7, sp, #0
 8000536:	6078      	str	r0, [r7, #4]
 8000538:	460b      	mov	r3, r1
 800053a:	70fb      	strb	r3, [r7, #3]
    pGPIOx->ODR ^= (1U << PinNumber);
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	695a      	ldr	r2, [r3, #20]
 8000540:	78fb      	ldrb	r3, [r7, #3]
 8000542:	2101      	movs	r1, #1
 8000544:	fa01 f303 	lsl.w	r3, r1, r3
 8000548:	405a      	eors	r2, r3
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	615a      	str	r2, [r3, #20]
}
 800054e:	bf00      	nop
 8000550:	370c      	adds	r7, #12
 8000552:	46bd      	mov	sp, r7
 8000554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000558:	4770      	bx	lr
	...

0800055c <GPIO_IRQIRConfig>:
/**
 * IRQ Configuration and ISR handling
 */
void GPIO_IRQIRConfig(U08 IRQNumber, U08 EnorDis)
{
 800055c:	b480      	push	{r7}
 800055e:	b083      	sub	sp, #12
 8000560:	af00      	add	r7, sp, #0
 8000562:	4603      	mov	r3, r0
 8000564:	460a      	mov	r2, r1
 8000566:	71fb      	strb	r3, [r7, #7]
 8000568:	4613      	mov	r3, r2
 800056a:	71bb      	strb	r3, [r7, #6]
    if(EnorDis == ENABLE)
 800056c:	79bb      	ldrb	r3, [r7, #6]
 800056e:	2b01      	cmp	r3, #1
 8000570:	d130      	bne.n	80005d4 <GPIO_IRQIRConfig+0x78>
    {
        if(IRQNumber <= 31)
 8000572:	79fb      	ldrb	r3, [r7, #7]
 8000574:	2b1f      	cmp	r3, #31
 8000576:	d809      	bhi.n	800058c <GPIO_IRQIRConfig+0x30>
        {
            *NVIC_ISER0 |= (1U << IRQNumber);
 8000578:	4b32      	ldr	r3, [pc, #200]	@ (8000644 <GPIO_IRQIRConfig+0xe8>)
 800057a:	681a      	ldr	r2, [r3, #0]
 800057c:	79fb      	ldrb	r3, [r7, #7]
 800057e:	2101      	movs	r1, #1
 8000580:	fa01 f303 	lsl.w	r3, r1, r3
 8000584:	492f      	ldr	r1, [pc, #188]	@ (8000644 <GPIO_IRQIRConfig+0xe8>)
 8000586:	4313      	orrs	r3, r2
 8000588:	600b      	str	r3, [r1, #0]
        else if (IRQNumber >= 64 && IRQNumber < 96)
        {
            *NVIC_ICER2 |= (1U << (IRQNumber % 32));
        }
    }
}
 800058a:	e054      	b.n	8000636 <GPIO_IRQIRConfig+0xda>
        else if (IRQNumber > 31 && IRQNumber < 64)
 800058c:	79fb      	ldrb	r3, [r7, #7]
 800058e:	2b1f      	cmp	r3, #31
 8000590:	d90e      	bls.n	80005b0 <GPIO_IRQIRConfig+0x54>
 8000592:	79fb      	ldrb	r3, [r7, #7]
 8000594:	2b3f      	cmp	r3, #63	@ 0x3f
 8000596:	d80b      	bhi.n	80005b0 <GPIO_IRQIRConfig+0x54>
            *NVIC_ISER1 |= (1U << (IRQNumber % 32));
 8000598:	4b2b      	ldr	r3, [pc, #172]	@ (8000648 <GPIO_IRQIRConfig+0xec>)
 800059a:	681a      	ldr	r2, [r3, #0]
 800059c:	79fb      	ldrb	r3, [r7, #7]
 800059e:	f003 031f 	and.w	r3, r3, #31
 80005a2:	2101      	movs	r1, #1
 80005a4:	fa01 f303 	lsl.w	r3, r1, r3
 80005a8:	4927      	ldr	r1, [pc, #156]	@ (8000648 <GPIO_IRQIRConfig+0xec>)
 80005aa:	4313      	orrs	r3, r2
 80005ac:	600b      	str	r3, [r1, #0]
 80005ae:	e042      	b.n	8000636 <GPIO_IRQIRConfig+0xda>
        else if (IRQNumber >= 64 && IRQNumber < 96)
 80005b0:	79fb      	ldrb	r3, [r7, #7]
 80005b2:	2b3f      	cmp	r3, #63	@ 0x3f
 80005b4:	d93f      	bls.n	8000636 <GPIO_IRQIRConfig+0xda>
 80005b6:	79fb      	ldrb	r3, [r7, #7]
 80005b8:	2b5f      	cmp	r3, #95	@ 0x5f
 80005ba:	d83c      	bhi.n	8000636 <GPIO_IRQIRConfig+0xda>
            *NVIC_ISER2 |= (1U << (IRQNumber % 32));
 80005bc:	4b23      	ldr	r3, [pc, #140]	@ (800064c <GPIO_IRQIRConfig+0xf0>)
 80005be:	681a      	ldr	r2, [r3, #0]
 80005c0:	79fb      	ldrb	r3, [r7, #7]
 80005c2:	f003 031f 	and.w	r3, r3, #31
 80005c6:	2101      	movs	r1, #1
 80005c8:	fa01 f303 	lsl.w	r3, r1, r3
 80005cc:	491f      	ldr	r1, [pc, #124]	@ (800064c <GPIO_IRQIRConfig+0xf0>)
 80005ce:	4313      	orrs	r3, r2
 80005d0:	600b      	str	r3, [r1, #0]
}
 80005d2:	e030      	b.n	8000636 <GPIO_IRQIRConfig+0xda>
        if(IRQNumber <= 31)
 80005d4:	79fb      	ldrb	r3, [r7, #7]
 80005d6:	2b1f      	cmp	r3, #31
 80005d8:	d809      	bhi.n	80005ee <GPIO_IRQIRConfig+0x92>
            *NVIC_ICER0 |= (1U << IRQNumber);
 80005da:	4b1d      	ldr	r3, [pc, #116]	@ (8000650 <GPIO_IRQIRConfig+0xf4>)
 80005dc:	681a      	ldr	r2, [r3, #0]
 80005de:	79fb      	ldrb	r3, [r7, #7]
 80005e0:	2101      	movs	r1, #1
 80005e2:	fa01 f303 	lsl.w	r3, r1, r3
 80005e6:	491a      	ldr	r1, [pc, #104]	@ (8000650 <GPIO_IRQIRConfig+0xf4>)
 80005e8:	4313      	orrs	r3, r2
 80005ea:	600b      	str	r3, [r1, #0]
}
 80005ec:	e023      	b.n	8000636 <GPIO_IRQIRConfig+0xda>
        else if (IRQNumber > 31 && IRQNumber < 64)
 80005ee:	79fb      	ldrb	r3, [r7, #7]
 80005f0:	2b1f      	cmp	r3, #31
 80005f2:	d90e      	bls.n	8000612 <GPIO_IRQIRConfig+0xb6>
 80005f4:	79fb      	ldrb	r3, [r7, #7]
 80005f6:	2b3f      	cmp	r3, #63	@ 0x3f
 80005f8:	d80b      	bhi.n	8000612 <GPIO_IRQIRConfig+0xb6>
            *NVIC_ICER1 |= (1U << (IRQNumber % 32));
 80005fa:	4b16      	ldr	r3, [pc, #88]	@ (8000654 <GPIO_IRQIRConfig+0xf8>)
 80005fc:	681a      	ldr	r2, [r3, #0]
 80005fe:	79fb      	ldrb	r3, [r7, #7]
 8000600:	f003 031f 	and.w	r3, r3, #31
 8000604:	2101      	movs	r1, #1
 8000606:	fa01 f303 	lsl.w	r3, r1, r3
 800060a:	4912      	ldr	r1, [pc, #72]	@ (8000654 <GPIO_IRQIRConfig+0xf8>)
 800060c:	4313      	orrs	r3, r2
 800060e:	600b      	str	r3, [r1, #0]
 8000610:	e011      	b.n	8000636 <GPIO_IRQIRConfig+0xda>
        else if (IRQNumber >= 64 && IRQNumber < 96)
 8000612:	79fb      	ldrb	r3, [r7, #7]
 8000614:	2b3f      	cmp	r3, #63	@ 0x3f
 8000616:	d90e      	bls.n	8000636 <GPIO_IRQIRConfig+0xda>
 8000618:	79fb      	ldrb	r3, [r7, #7]
 800061a:	2b5f      	cmp	r3, #95	@ 0x5f
 800061c:	d80b      	bhi.n	8000636 <GPIO_IRQIRConfig+0xda>
            *NVIC_ICER2 |= (1U << (IRQNumber % 32));
 800061e:	4b0e      	ldr	r3, [pc, #56]	@ (8000658 <GPIO_IRQIRConfig+0xfc>)
 8000620:	681a      	ldr	r2, [r3, #0]
 8000622:	79fb      	ldrb	r3, [r7, #7]
 8000624:	f003 031f 	and.w	r3, r3, #31
 8000628:	2101      	movs	r1, #1
 800062a:	fa01 f303 	lsl.w	r3, r1, r3
 800062e:	490a      	ldr	r1, [pc, #40]	@ (8000658 <GPIO_IRQIRConfig+0xfc>)
 8000630:	4313      	orrs	r3, r2
 8000632:	600b      	str	r3, [r1, #0]
}
 8000634:	e7ff      	b.n	8000636 <GPIO_IRQIRConfig+0xda>
 8000636:	bf00      	nop
 8000638:	370c      	adds	r7, #12
 800063a:	46bd      	mov	sp, r7
 800063c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000640:	4770      	bx	lr
 8000642:	bf00      	nop
 8000644:	e000e100 	.word	0xe000e100
 8000648:	e000e104 	.word	0xe000e104
 800064c:	e000e108 	.word	0xe000e108
 8000650:	e000e180 	.word	0xe000e180
 8000654:	e000e184 	.word	0xe000e184
 8000658:	e000e188 	.word	0xe000e188

0800065c <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(U08 IRQNumber, U08 IRQPriority)
{
 800065c:	b480      	push	{r7}
 800065e:	b085      	sub	sp, #20
 8000660:	af00      	add	r7, sp, #0
 8000662:	4603      	mov	r3, r0
 8000664:	460a      	mov	r2, r1
 8000666:	71fb      	strb	r3, [r7, #7]
 8000668:	4613      	mov	r3, r2
 800066a:	71bb      	strb	r3, [r7, #6]
    /* First lets find out tue IP register mapping*/
    U08 iprx = IRQNumber / 4;
 800066c:	79fb      	ldrb	r3, [r7, #7]
 800066e:	089b      	lsrs	r3, r3, #2
 8000670:	73fb      	strb	r3, [r7, #15]
    U08 iprx_section = IRQNumber % 4;
 8000672:	79fb      	ldrb	r3, [r7, #7]
 8000674:	f003 0303 	and.w	r3, r3, #3
 8000678:	73bb      	strb	r3, [r7, #14]

    U08 shift_amount = (8 * iprx_section) +  (8 - NO_PR_BITS_IMPLEMENTED);
 800067a:	7bbb      	ldrb	r3, [r7, #14]
 800067c:	00db      	lsls	r3, r3, #3
 800067e:	b2db      	uxtb	r3, r3
 8000680:	3304      	adds	r3, #4
 8000682:	737b      	strb	r3, [r7, #13]
    *(NVIC_PR_BASE_ADDR + (iprx * 4)) |= (IRQPriority << shift_amount);
 8000684:	7bfb      	ldrb	r3, [r7, #15]
 8000686:	011b      	lsls	r3, r3, #4
 8000688:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 800068c:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000690:	681a      	ldr	r2, [r3, #0]
 8000692:	79b9      	ldrb	r1, [r7, #6]
 8000694:	7b7b      	ldrb	r3, [r7, #13]
 8000696:	fa01 f303 	lsl.w	r3, r1, r3
 800069a:	4619      	mov	r1, r3
 800069c:	7bfb      	ldrb	r3, [r7, #15]
 800069e:	011b      	lsls	r3, r3, #4
 80006a0:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 80006a4:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 80006a8:	430a      	orrs	r2, r1
 80006aa:	601a      	str	r2, [r3, #0]
}
 80006ac:	bf00      	nop
 80006ae:	3714      	adds	r7, #20
 80006b0:	46bd      	mov	sp, r7
 80006b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006b6:	4770      	bx	lr

080006b8 <GPIO_IRQHandling>:

void GPIO_IRQHandling(U08 PinNumber)
{
 80006b8:	b480      	push	{r7}
 80006ba:	b083      	sub	sp, #12
 80006bc:	af00      	add	r7, sp, #0
 80006be:	4603      	mov	r3, r0
 80006c0:	71fb      	strb	r3, [r7, #7]
    // clear the exit PR register corresponding to the pin number
    if(EXTI->PR & (1U << PinNumber))
 80006c2:	4b0c      	ldr	r3, [pc, #48]	@ (80006f4 <GPIO_IRQHandling+0x3c>)
 80006c4:	695a      	ldr	r2, [r3, #20]
 80006c6:	79fb      	ldrb	r3, [r7, #7]
 80006c8:	2101      	movs	r1, #1
 80006ca:	fa01 f303 	lsl.w	r3, r1, r3
 80006ce:	4013      	ands	r3, r2
 80006d0:	2b00      	cmp	r3, #0
 80006d2:	d008      	beq.n	80006e6 <GPIO_IRQHandling+0x2e>
    {
        EXTI->PR |= (1U << PinNumber);
 80006d4:	4b07      	ldr	r3, [pc, #28]	@ (80006f4 <GPIO_IRQHandling+0x3c>)
 80006d6:	695a      	ldr	r2, [r3, #20]
 80006d8:	79fb      	ldrb	r3, [r7, #7]
 80006da:	2101      	movs	r1, #1
 80006dc:	fa01 f303 	lsl.w	r3, r1, r3
 80006e0:	4904      	ldr	r1, [pc, #16]	@ (80006f4 <GPIO_IRQHandling+0x3c>)
 80006e2:	4313      	orrs	r3, r2
 80006e4:	614b      	str	r3, [r1, #20]
    }
}
 80006e6:	bf00      	nop
 80006e8:	370c      	adds	r7, #12
 80006ea:	46bd      	mov	sp, r7
 80006ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006f0:	4770      	bx	lr
 80006f2:	bf00      	nop
 80006f4:	40013c00 	.word	0x40013c00

080006f8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006f8:	480d      	ldr	r0, [pc, #52]	@ (8000730 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006fa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006fc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000700:	480c      	ldr	r0, [pc, #48]	@ (8000734 <LoopForever+0x6>)
  ldr r1, =_edata
 8000702:	490d      	ldr	r1, [pc, #52]	@ (8000738 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000704:	4a0d      	ldr	r2, [pc, #52]	@ (800073c <LoopForever+0xe>)
  movs r3, #0
 8000706:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000708:	e002      	b.n	8000710 <LoopCopyDataInit>

0800070a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800070a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800070c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800070e:	3304      	adds	r3, #4

08000710 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000710:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000712:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000714:	d3f9      	bcc.n	800070a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000716:	4a0a      	ldr	r2, [pc, #40]	@ (8000740 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000718:	4c0a      	ldr	r4, [pc, #40]	@ (8000744 <LoopForever+0x16>)
  movs r3, #0
 800071a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800071c:	e001      	b.n	8000722 <LoopFillZerobss>

0800071e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800071e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000720:	3204      	adds	r2, #4

08000722 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000722:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000724:	d3fb      	bcc.n	800071e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000726:	f000 f819 	bl	800075c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800072a:	f7ff fd53 	bl	80001d4 <main>

0800072e <LoopForever>:

LoopForever:
  b LoopForever
 800072e:	e7fe      	b.n	800072e <LoopForever>
  ldr   r0, =_estack
 8000730:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000734:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000738:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800073c:	080007c4 	.word	0x080007c4
  ldr r2, =_sbss
 8000740:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000744:	2000001c 	.word	0x2000001c

08000748 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000748:	e7fe      	b.n	8000748 <ADC_IRQHandler>

0800074a <memset>:
 800074a:	4402      	add	r2, r0
 800074c:	4603      	mov	r3, r0
 800074e:	4293      	cmp	r3, r2
 8000750:	d100      	bne.n	8000754 <memset+0xa>
 8000752:	4770      	bx	lr
 8000754:	f803 1b01 	strb.w	r1, [r3], #1
 8000758:	e7f9      	b.n	800074e <memset+0x4>
	...

0800075c <__libc_init_array>:
 800075c:	b570      	push	{r4, r5, r6, lr}
 800075e:	4d0d      	ldr	r5, [pc, #52]	@ (8000794 <__libc_init_array+0x38>)
 8000760:	4c0d      	ldr	r4, [pc, #52]	@ (8000798 <__libc_init_array+0x3c>)
 8000762:	1b64      	subs	r4, r4, r5
 8000764:	10a4      	asrs	r4, r4, #2
 8000766:	2600      	movs	r6, #0
 8000768:	42a6      	cmp	r6, r4
 800076a:	d109      	bne.n	8000780 <__libc_init_array+0x24>
 800076c:	4d0b      	ldr	r5, [pc, #44]	@ (800079c <__libc_init_array+0x40>)
 800076e:	4c0c      	ldr	r4, [pc, #48]	@ (80007a0 <__libc_init_array+0x44>)
 8000770:	f000 f818 	bl	80007a4 <_init>
 8000774:	1b64      	subs	r4, r4, r5
 8000776:	10a4      	asrs	r4, r4, #2
 8000778:	2600      	movs	r6, #0
 800077a:	42a6      	cmp	r6, r4
 800077c:	d105      	bne.n	800078a <__libc_init_array+0x2e>
 800077e:	bd70      	pop	{r4, r5, r6, pc}
 8000780:	f855 3b04 	ldr.w	r3, [r5], #4
 8000784:	4798      	blx	r3
 8000786:	3601      	adds	r6, #1
 8000788:	e7ee      	b.n	8000768 <__libc_init_array+0xc>
 800078a:	f855 3b04 	ldr.w	r3, [r5], #4
 800078e:	4798      	blx	r3
 8000790:	3601      	adds	r6, #1
 8000792:	e7f2      	b.n	800077a <__libc_init_array+0x1e>
 8000794:	080007bc 	.word	0x080007bc
 8000798:	080007bc 	.word	0x080007bc
 800079c:	080007bc 	.word	0x080007bc
 80007a0:	080007c0 	.word	0x080007c0

080007a4 <_init>:
 80007a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007a6:	bf00      	nop
 80007a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007aa:	bc08      	pop	{r3}
 80007ac:	469e      	mov	lr, r3
 80007ae:	4770      	bx	lr

080007b0 <_fini>:
 80007b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007b2:	bf00      	nop
 80007b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007b6:	bc08      	pop	{r3}
 80007b8:	469e      	mov	lr, r3
 80007ba:	4770      	bx	lr
