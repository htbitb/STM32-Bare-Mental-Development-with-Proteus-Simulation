
Interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000022c  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003c0  080003c8  000013c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003c0  080003c0  000013c8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080003c0  080003c0  000013c8  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080003c0  080003c8  000013c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003c0  080003c0  000013c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003c4  080003c4  000013c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003c8  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003c8  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000013c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000af2  00000000  00000000  000013f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002fe  00000000  00000000  00001eea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000080  00000000  00000000  000021e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000051  00000000  00000000  00002268  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dc77  00000000  00000000  000022b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b81  00000000  00000000  0000ff30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fc40  00000000  00000000  00010ab1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000606f1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000e8  00000000  00000000  00060734  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000045  00000000  00000000  0006081c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080003a8 	.word	0x080003a8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080003a8 	.word	0x080003a8

080001d4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80001de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001e2:	2b00      	cmp	r3, #0
 80001e4:	db0b      	blt.n	80001fe <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80001e6:	79fb      	ldrb	r3, [r7, #7]
 80001e8:	f003 021f 	and.w	r2, r3, #31
 80001ec:	4907      	ldr	r1, [pc, #28]	@ (800020c <__NVIC_EnableIRQ+0x38>)
 80001ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001f2:	095b      	lsrs	r3, r3, #5
 80001f4:	2001      	movs	r0, #1
 80001f6:	fa00 f202 	lsl.w	r2, r0, r2
 80001fa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 80001fe:	bf00      	nop
 8000200:	370c      	adds	r7, #12
 8000202:	46bd      	mov	sp, r7
 8000204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000208:	4770      	bx	lr
 800020a:	bf00      	nop
 800020c:	e000e100 	.word	0xe000e100

08000210 <pc13_exti_init>:
#define GPIOCENR	(1U<<2)
#define SYSCFGENR	(1U<<14)


void pc13_exti_init(void)
{
 8000210:	b580      	push	{r7, lr}
 8000212:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000214:	b672      	cpsid	i
}
 8000216:	bf00      	nop
	/*Disable global interrupt*/
	__disable_irq();

	/*Enable clock access for GPIO*/
	RCC->AHB1ENR |= GPIOCENR;
 8000218:	4b18      	ldr	r3, [pc, #96]	@ (800027c <pc13_exti_init+0x6c>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800021c:	4a17      	ldr	r2, [pc, #92]	@ (800027c <pc13_exti_init+0x6c>)
 800021e:	f043 0304 	orr.w	r3, r3, #4
 8000222:	6313      	str	r3, [r2, #48]	@ 0x30

	/*Configure PC13 as input*/
	GPIOC->MODER &=~((1U<<26));
 8000224:	4b16      	ldr	r3, [pc, #88]	@ (8000280 <pc13_exti_init+0x70>)
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	4a15      	ldr	r2, [pc, #84]	@ (8000280 <pc13_exti_init+0x70>)
 800022a:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800022e:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~((1U<<27));
 8000230:	4b13      	ldr	r3, [pc, #76]	@ (8000280 <pc13_exti_init+0x70>)
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	4a12      	ldr	r2, [pc, #72]	@ (8000280 <pc13_exti_init+0x70>)
 8000236:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 800023a:	6013      	str	r3, [r2, #0]


	/*Enable clock access to SYSCFG*/
	RCC->APB2ENR |= SYSCFGENR;
 800023c:	4b0f      	ldr	r3, [pc, #60]	@ (800027c <pc13_exti_init+0x6c>)
 800023e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000240:	4a0e      	ldr	r2, [pc, #56]	@ (800027c <pc13_exti_init+0x6c>)
 8000242:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000246:	6453      	str	r3, [r2, #68]	@ 0x44

	/*Select PORTC for EXTI13*/
	SYSCFG->EXTICR[3] |= (1U<<5);
 8000248:	4b0e      	ldr	r3, [pc, #56]	@ (8000284 <pc13_exti_init+0x74>)
 800024a:	695b      	ldr	r3, [r3, #20]
 800024c:	4a0d      	ldr	r2, [pc, #52]	@ (8000284 <pc13_exti_init+0x74>)
 800024e:	f043 0320 	orr.w	r3, r3, #32
 8000252:	6153      	str	r3, [r2, #20]

	/*Unmask EXTI13*/
	EXTI->IMR |= (1U<<13);
 8000254:	4b0c      	ldr	r3, [pc, #48]	@ (8000288 <pc13_exti_init+0x78>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	4a0b      	ldr	r2, [pc, #44]	@ (8000288 <pc13_exti_init+0x78>)
 800025a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800025e:	6013      	str	r3, [r2, #0]

	/*Select falling edge trigger*/
	EXTI->FTSR |= (1U<<13);
 8000260:	4b09      	ldr	r3, [pc, #36]	@ (8000288 <pc13_exti_init+0x78>)
 8000262:	68db      	ldr	r3, [r3, #12]
 8000264:	4a08      	ldr	r2, [pc, #32]	@ (8000288 <pc13_exti_init+0x78>)
 8000266:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800026a:	60d3      	str	r3, [r2, #12]

	/*Enable EXTi13 line in NVIC*/
	NVIC_EnableIRQ(40);
 800026c:	2028      	movs	r0, #40	@ 0x28
 800026e:	f7ff ffb1 	bl	80001d4 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 8000272:	b662      	cpsie	i
}
 8000274:	bf00      	nop

	/*Enable global interrupts*/
	__enable_irq();
}
 8000276:	bf00      	nop
 8000278:	bd80      	pop	{r7, pc}
 800027a:	bf00      	nop
 800027c:	40023800 	.word	0x40023800
 8000280:	40020800 	.word	0x40020800
 8000284:	40013800 	.word	0x40013800
 8000288:	40013c00 	.word	0x40013c00

0800028c <main>:


static void exti_callback(void);

int main()
{
 800028c:	b580      	push	{r7, lr}
 800028e:	af00      	add	r7, sp, #0
	/**
	 * 1. Enable clock access to GPIOA
	 * */
	RCC->AHB1ENR |= (1U<<0);
 8000290:	4b0a      	ldr	r3, [pc, #40]	@ (80002bc <main+0x30>)
 8000292:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000294:	4a09      	ldr	r2, [pc, #36]	@ (80002bc <main+0x30>)
 8000296:	f043 0301 	orr.w	r3, r3, #1
 800029a:	6313      	str	r3, [r2, #48]	@ 0x30


	/**
	 * 2. Set PA5 as output pin
	 */
	GPIOA->MODER |= (1U<<10);
 800029c:	4b08      	ldr	r3, [pc, #32]	@ (80002c0 <main+0x34>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	4a07      	ldr	r2, [pc, #28]	@ (80002c0 <main+0x34>)
 80002a2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80002a6:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U<<11);
 80002a8:	4b05      	ldr	r3, [pc, #20]	@ (80002c0 <main+0x34>)
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	4a04      	ldr	r2, [pc, #16]	@ (80002c0 <main+0x34>)
 80002ae:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80002b2:	6013      	str	r3, [r2, #0]

	pc13_exti_init();
 80002b4:	f7ff ffac 	bl	8000210 <pc13_exti_init>


	while(1){
 80002b8:	bf00      	nop
 80002ba:	e7fd      	b.n	80002b8 <main+0x2c>
 80002bc:	40023800 	.word	0x40023800
 80002c0:	40020000 	.word	0x40020000

080002c4 <exti_callback>:
//		timestamp = TIM3->CCR1;
	}
}

static void exti_callback(void)
{
 80002c4:	b480      	push	{r7}
 80002c6:	af00      	add	r7, sp, #0
	GPIOA->ODR ^= (1U<<5);
 80002c8:	4b05      	ldr	r3, [pc, #20]	@ (80002e0 <exti_callback+0x1c>)
 80002ca:	695b      	ldr	r3, [r3, #20]
 80002cc:	4a04      	ldr	r2, [pc, #16]	@ (80002e0 <exti_callback+0x1c>)
 80002ce:	f083 0320 	eor.w	r3, r3, #32
 80002d2:	6153      	str	r3, [r2, #20]
}
 80002d4:	bf00      	nop
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr
 80002de:	bf00      	nop
 80002e0:	40020000 	.word	0x40020000

080002e4 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void)
{
 80002e4:	b580      	push	{r7, lr}
 80002e6:	af00      	add	r7, sp, #0
	if((EXTI->PR & (1U<<13)) != 0)
 80002e8:	4b07      	ldr	r3, [pc, #28]	@ (8000308 <EXTI15_10_IRQHandler+0x24>)
 80002ea:	695b      	ldr	r3, [r3, #20]
 80002ec:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80002f0:	2b00      	cmp	r3, #0
 80002f2:	d007      	beq.n	8000304 <EXTI15_10_IRQHandler+0x20>
	{
		/*Clear PR flag*/
		EXTI->PR &=~(1U<<13);
 80002f4:	4b04      	ldr	r3, [pc, #16]	@ (8000308 <EXTI15_10_IRQHandler+0x24>)
 80002f6:	695b      	ldr	r3, [r3, #20]
 80002f8:	4a03      	ldr	r2, [pc, #12]	@ (8000308 <EXTI15_10_IRQHandler+0x24>)
 80002fa:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80002fe:	6153      	str	r3, [r2, #20]

		/*Do something..*/
		exti_callback();
 8000300:	f7ff ffe0 	bl	80002c4 <exti_callback>
	}
}
 8000304:	bf00      	nop
 8000306:	bd80      	pop	{r7, pc}
 8000308:	40013c00 	.word	0x40013c00

0800030c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800030c:	480d      	ldr	r0, [pc, #52]	@ (8000344 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800030e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000310:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000314:	480c      	ldr	r0, [pc, #48]	@ (8000348 <LoopForever+0x6>)
  ldr r1, =_edata
 8000316:	490d      	ldr	r1, [pc, #52]	@ (800034c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000318:	4a0d      	ldr	r2, [pc, #52]	@ (8000350 <LoopForever+0xe>)
  movs r3, #0
 800031a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800031c:	e002      	b.n	8000324 <LoopCopyDataInit>

0800031e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800031e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000320:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000322:	3304      	adds	r3, #4

08000324 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000324:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000326:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000328:	d3f9      	bcc.n	800031e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800032a:	4a0a      	ldr	r2, [pc, #40]	@ (8000354 <LoopForever+0x12>)
  ldr r4, =_ebss
 800032c:	4c0a      	ldr	r4, [pc, #40]	@ (8000358 <LoopForever+0x16>)
  movs r3, #0
 800032e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000330:	e001      	b.n	8000336 <LoopFillZerobss>

08000332 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000332:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000334:	3204      	adds	r2, #4

08000336 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000336:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000338:	d3fb      	bcc.n	8000332 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800033a:	f000 f811 	bl	8000360 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800033e:	f7ff ffa5 	bl	800028c <main>

08000342 <LoopForever>:

LoopForever:
  b LoopForever
 8000342:	e7fe      	b.n	8000342 <LoopForever>
  ldr   r0, =_estack
 8000344:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000348:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800034c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000350:	080003c8 	.word	0x080003c8
  ldr r2, =_sbss
 8000354:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000358:	2000001c 	.word	0x2000001c

0800035c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800035c:	e7fe      	b.n	800035c <ADC_IRQHandler>
	...

08000360 <__libc_init_array>:
 8000360:	b570      	push	{r4, r5, r6, lr}
 8000362:	4d0d      	ldr	r5, [pc, #52]	@ (8000398 <__libc_init_array+0x38>)
 8000364:	4c0d      	ldr	r4, [pc, #52]	@ (800039c <__libc_init_array+0x3c>)
 8000366:	1b64      	subs	r4, r4, r5
 8000368:	10a4      	asrs	r4, r4, #2
 800036a:	2600      	movs	r6, #0
 800036c:	42a6      	cmp	r6, r4
 800036e:	d109      	bne.n	8000384 <__libc_init_array+0x24>
 8000370:	4d0b      	ldr	r5, [pc, #44]	@ (80003a0 <__libc_init_array+0x40>)
 8000372:	4c0c      	ldr	r4, [pc, #48]	@ (80003a4 <__libc_init_array+0x44>)
 8000374:	f000 f818 	bl	80003a8 <_init>
 8000378:	1b64      	subs	r4, r4, r5
 800037a:	10a4      	asrs	r4, r4, #2
 800037c:	2600      	movs	r6, #0
 800037e:	42a6      	cmp	r6, r4
 8000380:	d105      	bne.n	800038e <__libc_init_array+0x2e>
 8000382:	bd70      	pop	{r4, r5, r6, pc}
 8000384:	f855 3b04 	ldr.w	r3, [r5], #4
 8000388:	4798      	blx	r3
 800038a:	3601      	adds	r6, #1
 800038c:	e7ee      	b.n	800036c <__libc_init_array+0xc>
 800038e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000392:	4798      	blx	r3
 8000394:	3601      	adds	r6, #1
 8000396:	e7f2      	b.n	800037e <__libc_init_array+0x1e>
 8000398:	080003c0 	.word	0x080003c0
 800039c:	080003c0 	.word	0x080003c0
 80003a0:	080003c0 	.word	0x080003c0
 80003a4:	080003c4 	.word	0x080003c4

080003a8 <_init>:
 80003a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003aa:	bf00      	nop
 80003ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ae:	bc08      	pop	{r3}
 80003b0:	469e      	mov	lr, r3
 80003b2:	4770      	bx	lr

080003b4 <_fini>:
 80003b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003b6:	bf00      	nop
 80003b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ba:	bc08      	pop	{r3}
 80003bc:	469e      	mov	lr, r3
 80003be:	4770      	bx	lr
